#! /bin/sh

### BEGIN INIT INFO
# Provides:             agentwatch
# Required-Start:       $local_fs
# Required-Stop:        $local_fs
# Default-Start:        2 3 4 5
# Default-Stop:         
### END INIT INFO

virt_what_cpuid_helper='/usr/sbin/virt-what-cpuid-helper'

gshelld_name='gshelld'

aliyun_service_name='aliyun-service'
aliyun_service_bin="/usr/sbin/$aliyun_service_name"
aliyun_service_opts='-d'
aliyun_service_pid_file="/var/run/${aliyun_service_name}.pid"

agent_name=''
agent_cmd=''

prepare_env() {
	[ -x $virt_what_cpuid_helper ] || exit 1
	[ -x $aliyun_service_bin ] || exit 3
	virt=''
	cpuid=`$virt_what_cpuid_helper`
	[ -z $cpuid ] && exit 4
	if [ $cpuid = 'XenVMMXenVMM' ]; then
		virt='xen'
	elif [ $cpuid = 'KVMKVMKVM' ]; then
		virt='kvm'	
	fi
    agent_name=$aliyun_service_name
	agent_cmd="$aliyun_service_bin $aliyun_service_opts"
	[ -z $virt ] && exit 5
}

mount_xenfs() {
	if ! mount -t xenfs | grep -q 'none on /proc/xen' ; then
		mount none -t xenfs /proc/xen
	fi
}

do_start() {
	do_status && return 0
	[ $virt = 'xen' ] && mount_xenfs
	$agent_cmd
}

do_stop() {
    stop_gshell
	pid=$(do_status)
	[ -z "$pid" ] && return 0
	kill $pid

	if do_status ; then
		return 1
	else
		return 0
	fi
}

do_status() {
	pgrep $agent_name
}

stop_gshell() {
    pid=$(pgrep $gshelld_name)
	[ -z "$pid" ] && return 0
	kill $pid
}

case "$1" in
	start)
		prepare_env
		do_start
		;;
	restart|reload|force-reload)
		prepare_env
		do_stop
		do_start
		;;
	stop)
		prepare_env
		do_stop
		exit 0
		;;
	status)
		prepare_env
		do_status
		exit 0
		;;
	*)
		echo "Usage: $0 start|stop|status" >&2
		exit 3
		;;
esac
