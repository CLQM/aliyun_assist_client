CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
# CMake 最低版本号要求
PROJECT (alyun-installer) 

INCLUDE_DIRECTORIES(../third_party)
INCLUDE_DIRECTORIES(../common)
include_directories(../third_party/libcurl/include)
link_directories(../third_party/libcurl/lib)
link_directories(../common)
if(WIN32)
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/INCREMENTAL:NO /DEBUG" )
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
    set(CMAKE_CXX_FLAGS_DEBUG   "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
    link_libraries(shlwapi Psapi version)
    link_libraries(ws2_32 Wldap32)
    link_libraries(libcurl.lib)
    add_definitions(-DUNICODE -D_UNICODE)
    add_definitions(-DCURL_STATICLIB)
else(UNIX)
    INCLUDE_DIRECTORIES(/usr/include)
    link_libraries(libcurl)
    LINK_DIRECTORIES(/usr/lib)
    LINK_DIRECTORIES(/usr/local/lib)
    link_libraries(pthread assist-common)
    link_libraries(../third_party/libcurl/lib/libcurl.a)
    add_compile_options(-std=c++11)
endif()
	
	link_libraries(assist-common)
	link_libraries(third_party)
aux_source_directory(. DIR_SRCS)
aux_source_directory(./packagemanager DIR_SRCS)
ADD_EXECUTABLE(alyun_installer ${DIR_SRCS})
SET_TARGET_PROPERTIES(alyun_installer PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG   ${CMAKE_CURRENT_SOURCE_DIR}/../output/)
SET_TARGET_PROPERTIES(alyun_installer PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/../output/)
